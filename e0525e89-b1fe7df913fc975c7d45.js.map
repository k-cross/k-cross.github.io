{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["PostTemplate","css","colors","darkmode","PostFull","NoImage","PostFullHeader","PostFullTags","midgrey","PostFullCustomExcerpt","lighten","PostFullByline","lightgrey","darkgrey","PostFullTitle","setLightness","PostFullImage","PageTemplate","props","post","data","markdownRemark","width","height","frontmatter","picture","childImageSharp","fluid","sizes","split","String","Number","aspectRatio","date","Date","modifiedDate","modified","datetime","format","displayDatetime","displayModifiedDT","className","lang","config","title","name","content","excerpt","property","siteUrl","pathContext","slug","src","tags","author","id","twitter","outer","SiteNavMain","inner","isPost","SiteMain","length","to","authors","tooltip","map","dateTime","timeToRead","style","alt","htmlAst","currentPageSlug","relatedPosts","pageContext"],"mappings":"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","file":"e0525e89-b1fe7df913fc975c7d45.js","sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport { AuthorList } from '../components/AuthorList';\n\nimport 'katex/dist/katex.min.css';\n\nexport interface Author {\n  id: string;\n  bio: string;\n  avatar: {\n    children: Array<{\n      fluid: FluidObject;\n    }>;\n  };\n}\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        modified: string;\n        picture: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n            modified: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    picture: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    excerpt: string;\n    title: string;\n    date: string;\n    modified: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.picture?.childImageSharp) {\n    width = post.frontmatter.picture.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.picture.childImageSharp.fluid.aspectRatio);\n  }\n\n  const date = new Date(post.frontmatter.date);\n  const modifiedDate = new Date(post.frontmatter.modified);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n  const displayModifiedDT = format(modifiedDate, 'dd LLL yyyy');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.picture?.childImageSharp && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${post.frontmatter.picture.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.picture?.childImageSharp && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${post.frontmatter.picture.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.picture && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n                    <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                      {post.frontmatter.tags[0]}\n                    </Link>\n                  )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map(author => author.id)}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          published {displayDatetime}\n                        </time>\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          <span className=\"bull\">&bull;</span> last modified {displayModifiedDT}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span> {post.timeToRead} min read\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.picture?.childImageSharp && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.picture.childImageSharp.fluid}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={props.pathContext.slug}\n          tags={post.frontmatter.tags}\n          relatedPosts={props.data.relatedPosts}\n          pageContext={props.pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nexport const PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nexport const PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        modified\n        tags\n        excerpt\n        picture {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            date\n            modified\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"sourceRoot":""}