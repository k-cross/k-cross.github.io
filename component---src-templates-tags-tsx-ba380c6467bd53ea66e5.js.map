{"version":3,"file":"component---src-templates-tags-tsx-ba380c6467bd53ea66e5.js","mappings":"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","sources":["webpack://blog/./src/templates/tags.tsx"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { Footer } from \"../components/Footer\";\nimport SiteNav from \"../components/header/SiteNav\";\nimport { PostCard } from \"../components/PostCard\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport IndexLayout from \"../layouts\";\nimport {\n\tinner,\n\touter,\n\tPostFeed,\n\tSiteDescription,\n\tSiteHeader,\n\tSiteHeaderContent,\n\tSiteMain,\n\tSiteTitle,\n\tSiteNavMain,\n\tSiteArchiveHeader,\n\tResponsiveHeaderBackground,\n\tSiteHeaderBackground,\n} from \"../styles/shared\";\nimport { PageContext } from \"./post\";\nimport { Helmet } from \"react-helmet\";\nimport config from \"../website-config\";\n\ninterface TagTemplateProps {\n\tpageContext: {\n\t\tslug: string;\n\t\ttag: string;\n\t};\n\tdata: {\n\t\tallTagYaml: {\n\t\t\tedges: Array<{\n\t\t\t\tnode: {\n\t\t\t\t\tid: string;\n\t\t\t\t\tdescription: string;\n\t\t\t\t\tpicture?: {\n\t\t\t\t\t\tchildImageSharp: {\n\t\t\t\t\t\t\tgatsbyImageData: any;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}>;\n\t\t};\n\t\tallMarkdownRemark: {\n\t\t\ttotalCount: number;\n\t\t\tedges: Array<{\n\t\t\t\tnode: PageContext;\n\t\t\t}>;\n\t\t};\n\t};\n}\n\nconst Tags: React.FC<TagTemplateProps> = (props) => {\n\tconst tag = props.pageContext.tag ? props.pageContext.tag : \"\";\n\tconst { edges, totalCount } = props.data.allMarkdownRemark;\n\tconst tagData = props.data.allTagYaml.edges.find(\n\t\t(n) => n.node.id.toLowerCase() === tag.toLowerCase(),\n\t);\n\n\treturn (\n\t\t<IndexLayout>\n\t\t\t<Helmet>\n\t\t\t\t<html lang={config.lang} />\n\t\t\t\t<title>\n\t\t\t\t\t{tag} - {config.title}\n\t\t\t\t</title>\n\t\t\t\t<meta\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tcontent={tagData?.node ? tagData.node.description : \"\"}\n\t\t\t\t/>\n\t\t\t\t<meta property=\"og:site_name\" content={config.title} />\n\t\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t\t<meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n\t\t\t\t<meta\n\t\t\t\t\tproperty=\"og:url\"\n\t\t\t\t\tcontent={config.siteUrl + props.pageContext.slug}\n\t\t\t\t/>\n\t\t\t\t<meta name=\"bsky:card\" content=\"summary_large_image\" />\n\t\t\t\t<meta name=\"bsky:title\" content={`${tag} - ${config.title}`} />\n\t\t\t\t<meta\n\t\t\t\t\tname=\"bsky:url\"\n\t\t\t\t\tcontent={config.siteUrl + props.pageContext.slug}\n\t\t\t\t/>\n\t\t\t\t{config.bsky && (\n\t\t\t\t\t<meta\n\t\t\t\t\t\tname=\"bsky:site\"\n\t\t\t\t\t\tcontent={`@${config.bsky.split(\"https://bsky.app/\")[1]}`}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Helmet>\n\t\t\t<Wrapper>\n\t\t\t\t<header\n\t\t\t\t\tclassName=\"site-archive-header\"\n\t\t\t\t\tcss={[SiteHeader, SiteArchiveHeader]}\n\t\t\t\t>\n\t\t\t\t\t<div css={[outer, SiteNavMain]}>\n\t\t\t\t\t\t<div css={inner}>\n\t\t\t\t\t\t\t<SiteNav isHome={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ResponsiveHeaderBackground\n\t\t\t\t\t\tcss={[outer, SiteHeaderBackground]}\n\t\t\t\t\t\tbackgroundImage={\n\t\t\t\t\t\t\ttagData?.node?.picture?.childImageSharp?.gatsbyImageData?.src\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName=\"site-header-background\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<SiteHeaderContent css={inner} className=\"site-header-content\">\n\t\t\t\t\t\t\t<SiteTitle className=\"site-title\">{tag}</SiteTitle>\n\t\t\t\t\t\t\t<SiteDescription className=\"site-description\">\n\t\t\t\t\t\t\t\t{tagData?.node.description ? (\n\t\t\t\t\t\t\t\t\ttagData.node.description\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\tA collection of {totalCount > 1 && `${totalCount} posts`}\n\t\t\t\t\t\t\t\t\t\t{totalCount === 1 && \"1 post\"}\n\t\t\t\t\t\t\t\t\t\t{totalCount === 0 && \"No posts\"}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</SiteDescription>\n\t\t\t\t\t\t</SiteHeaderContent>\n\t\t\t\t\t</ResponsiveHeaderBackground>\n\t\t\t\t</header>\n\t\t\t\t<main id=\"site-main\" css={[SiteMain, outer]}>\n\t\t\t\t\t<div css={inner}>\n\t\t\t\t\t\t<div css={[PostFeed]}>\n\t\t\t\t\t\t\t{edges.map(({ node }) => (\n\t\t\t\t\t\t\t\t<PostCard key={node.fields.slug} post={node} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<Footer />\n\t\t\t</Wrapper>\n\t\t</IndexLayout>\n\t);\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`query ($tag: String) {\n  allTagYaml {\n    edges {\n      node {\n        id\n        description\n        picture {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n  allMarkdownRemark(\n    limit: 2000\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {tags: {in: [$tag]}, draft: {ne: true}}}\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        timeToRead\n        frontmatter {\n          title\n          excerpt\n          tags\n          date\n          picture {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        fields {\n          layout\n          slug\n        }\n      }\n    }\n  }\n}`;\n"],"names":["props","_tagData$node","_tagData$node$picture","_tagData$node$picture2","_tagData$node$picture3","tag","pageContext","edges","totalCount","data","allMarkdownRemark","tagData","allTagYaml","find","n","node","id","toLowerCase","___EmotionJSX","IndexLayout","Helmet","lang","config","title","name","content","description","property","siteUrl","slug","bsky","split","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","SiteHeaderBackground","backgroundImage","picture","childImageSharp","gatsbyImageData","src","SiteHeaderContent","SiteTitle","SiteDescription","React","SiteMain","PostFeed","map","PostCard","key","fields","post","Footer"],"sourceRoot":""}