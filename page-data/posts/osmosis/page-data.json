{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/osmosis/","result":{"data":{"markdownRemark":{"html":"<p>In a magical world where all tasks are well defined, performing task <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span> or implement feature <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span> is a simple matter of doing.\nIn this world only the current state of the feature needs to be communicated.\nA product manager informs stakeholders what engineering is capable of based on raw metrics, creating hard deadlines meaningful to clients.\nTime is used as the sole metric to measure progress and productivity.\nUnfortunately, there’s a lot of grey area back in the non-magical realm of Earth.</p>\n<p>Well-defined tasks are rare in businesses with high uncertainty, volatility, or both.\nKey factors contributing to uncertainty are related to context.\nA ticket describing a task is often created by someone operating with language and context that may not translate to the person performing the task.\nEngineers usually have contextual concerns related to the inner-workings of a running system, even when the customer problem is known other departments own its context.\nWhat can accelerate desired outcomes and increase the effectiveness of collaboration?</p>\n<p>At the team level, distributing context and customer feedback between colleagues handling the same project is critical.\nTeam members have the opportunity to create a shared language for the project, rather than specific field jargon segmented between different types of team members.\nClarity between communication channels results because individuals talk about the same things rather than things that are off-center or tangential.\nThe idea is to create communication based feedback loops.\nMaking this loop as quick as possible is ideal since it’s used as a qualitative measure of effort.\nWith a slow feedback loop, more effort is spent on work that ends up misaligned with either customer or organizational goals.</p>\n<p>For individuals, providing relevant context is about determining who the target audience is.\nDetermining what’s useful then providing that knowledge in a format that’s easily consumable.\nGauging what an audience needs to hear and presenting technical information in an understandable way will provide insight to other organization functions.\nIncreased communication has the potential to simplify problem solutions; it’ll demonstrate both process and technical bottlenecks; finally, it provides power to persuade.\nFor example, it’s valuable to be able to:</p>\n<ul>\n<li>demonstrate to product management why a particular feature is harder to build than expected</li>\n<li>explain why changing the shape of production data without certainty is a bad idea</li>\n</ul>\n<p>Providing insight to people in a position to fight or push back deadlines, might do just that, provided they receive information that updates their native context.</p>\n<h2>Maximum Value for Least Effort</h2>\n<p>The <em>MVP</em> (minimum viable product) is an infamous term that’s meaningful in the context of a new product.\nBuilding an MVP is hard particularly when features are designed as MVPs on top of an MVP because there’s a good chance it requires compromises to <em>existing</em> features and functionality.\nAs an application’s complexity increases, the MVP model to feature development becomes less relevant.\nRapid prototyping should still be part of the development process, but prototypes are designed to reduce uncertainty, not become MVPs.\nAs the term mentions, MVP applies to <em>products</em> not <em>features</em> so let’s posit that the goals of an MVP are the same for new features.</p>\n<ol>\n<li>maximize value while performing least amount of work</li>\n<li>ship as quickly as possible</li>\n<li>initialize client feedback loop determining signal to noise ratio</li>\n</ol>\n<p>Building out MVPs often means catering to solving the subset of a more generalized problem.\nThe <em>base case</em> of a problem is it’s most generic form, which might be the least commonly used case.\nThe <em>special case</em> is a specific form of the same problem which may be simpler or more complex.\nIn the stance of a special case, the base case is often required to be built to have the scaffolding ready for future features.\nIf the special case is built without regard to the base case then duplicated effort results.\nWhen little effort is necessary to shift directions, the MVP makes sense, otherwise it’s not a useful design strategy.</p>\n<h2>Builder’s Conundrum</h2>\n<p>A problem by which the <em>builder</em> creates something to be consumed in a domain which the <em>builder</em> is unfamiliar.\nImagine being new to a very large code base and assigned a critical new feature with a hard deadline.\nThe design choices around data or public API endpoints are long lasting, but it’s unlikely to be correct when incremental, measured progress is the goal.\nIt’s unclear how customers use APIs and it’s also unfortunate when the shape of production data difficult to work with.</p>\n<p>How can an engineer solve problems for customers when all the information that’s given is, <em>implement feature X?</em>\nUnderstanding how customers use a product is critical to the design and implementation of new features.\nWhile the product team answers these questions, it’s valuable as an engineer to understand the context behind the solutions.\nHaving context results in a few benefits;\nhappier customers because solutions are designed for the problem they care about, rather than _using what was designed as a <em>workaround for the problem they care about</em>;\nhappier engineers because their autonomy increased, making judgment calls regarding the solution’s architecture, resulting in less effort and technical debt;\nhappier designers and product managers because resulting features are higher quality and more in line with what clients expect.</p>\n<p>Humans don’t absorb information, it’s curated and consumed.\nUnderstanding the limitations of MVPs increases the understanding of overall feature effort with respect to the product’s phase in its life-cycle.\nFor engineers, distilling technical knowledge into easy summaries that can be consumed by non-technical people will help persuade peers in other functions to fight for the important things.\nAs engineers, understanding key components of why this feature is being built or how this product is being used allows for better implementation strategies and insight for meaningful compromises.\nThis makes life more comfortable since overly ambitious partner commitments are less likely to occur, if we posit that colleagues are not malicious, otherwise all bets are off.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a magical world where all tasks are well defined, performing task "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"Y"}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"Y"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.22222em;"},"children":[{"type":"text","value":"Y"}]}]}]}]}]},{"type":"text","value":" or implement feature "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"X"}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"X"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.6833em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.07847em;"},"children":[{"type":"text","value":"X"}]}]}]}]}]},{"type":"text","value":" is a simple matter of doing.\nIn this world only the current state of the feature needs to be communicated.\nA product manager informs stakeholders what engineering is capable of based on raw metrics, creating hard deadlines meaningful to clients.\nTime is used as the sole metric to measure progress and productivity.\nUnfortunately, there’s a lot of grey area back in the non-magical realm of Earth."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Well-defined tasks are rare in businesses with high uncertainty, volatility, or both.\nKey factors contributing to uncertainty are related to context.\nA ticket describing a task is often created by someone operating with language and context that may not translate to the person performing the task.\nEngineers usually have contextual concerns related to the inner-workings of a running system, even when the customer problem is known other departments own its context.\nWhat can accelerate desired outcomes and increase the effectiveness of collaboration?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the team level, distributing context and customer feedback between colleagues handling the same project is critical.\nTeam members have the opportunity to create a shared language for the project, rather than specific field jargon segmented between different types of team members.\nClarity between communication channels results because individuals talk about the same things rather than things that are off-center or tangential.\nThe idea is to create communication based feedback loops.\nMaking this loop as quick as possible is ideal since it’s used as a qualitative measure of effort.\nWith a slow feedback loop, more effort is spent on work that ends up misaligned with either customer or organizational goals."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For individuals, providing relevant context is about determining who the target audience is.\nDetermining what’s useful then providing that knowledge in a format that’s easily consumable.\nGauging what an audience needs to hear and presenting technical information in an understandable way will provide insight to other organization functions.\nIncreased communication has the potential to simplify problem solutions; it’ll demonstrate both process and technical bottlenecks; finally, it provides power to persuade.\nFor example, it’s valuable to be able to:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"demonstrate to product management why a particular feature is harder to build than expected"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"explain why changing the shape of production data without certainty is a bad idea"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Providing insight to people in a position to fight or push back deadlines, might do just that, provided they receive information that updates their native context."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Maximum Value for Least Effort"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"MVP"}]},{"type":"text","value":" (minimum viable product) is an infamous term that’s meaningful in the context of a new product.\nBuilding an MVP is hard particularly when features are designed as MVPs on top of an MVP because there’s a good chance it requires compromises to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"existing"}]},{"type":"text","value":" features and functionality.\nAs an application’s complexity increases, the MVP model to feature development becomes less relevant.\nRapid prototyping should still be part of the development process, but prototypes are designed to reduce uncertainty, not become MVPs.\nAs the term mentions, MVP applies to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"products"}]},{"type":"text","value":" not "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"features"}]},{"type":"text","value":" so let’s posit that the goals of an MVP are the same for new features."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"maximize value while performing least amount of work"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ship as quickly as possible"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"initialize client feedback loop determining signal to noise ratio"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Building out MVPs often means catering to solving the subset of a more generalized problem.\nThe "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"base case"}]},{"type":"text","value":" of a problem is it’s most generic form, which might be the least commonly used case.\nThe "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"special case"}]},{"type":"text","value":" is a specific form of the same problem which may be simpler or more complex.\nIn the stance of a special case, the base case is often required to be built to have the scaffolding ready for future features.\nIf the special case is built without regard to the base case then duplicated effort results.\nWhen little effort is necessary to shift directions, the MVP makes sense, otherwise it’s not a useful design strategy."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Builder’s Conundrum"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A problem by which the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"builder"}]},{"type":"text","value":" creates something to be consumed in a domain which the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"builder"}]},{"type":"text","value":" is unfamiliar.\nImagine being new to a very large code base and assigned a critical new feature with a hard deadline.\nThe design choices around data or public API endpoints are long lasting, but it’s unlikely to be correct when incremental, measured progress is the goal.\nIt’s unclear how customers use APIs and it’s also unfortunate when the shape of production data difficult to work with."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can an engineer solve problems for customers when all the information that’s given is, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"implement feature X?"}]},{"type":"text","value":"\nUnderstanding how customers use a product is critical to the design and implementation of new features.\nWhile the product team answers these questions, it’s valuable as an engineer to understand the context behind the solutions.\nHaving context results in a few benefits;\nhappier customers because solutions are designed for the problem they care about, rather than _using what was designed as a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"workaround for the problem they care about"}]},{"type":"text","value":";\nhappier engineers because their autonomy increased, making judgment calls regarding the solution’s architecture, resulting in less effort and technical debt;\nhappier designers and product managers because resulting features are higher quality and more in line with what clients expect."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Humans don’t absorb information, it’s curated and consumed.\nUnderstanding the limitations of MVPs increases the understanding of overall feature effort with respect to the product’s phase in its life-cycle.\nFor engineers, distilling technical knowledge into easy summaries that can be consumed by non-technical people will help persuade peers in other functions to fight for the important things.\nAs engineers, understanding key components of why this feature is being built or how this product is being used allows for better implementation strategies and insight for meaningful compromises.\nThis makes life more comfortable since overly ambitious partner commitments are less likely to occur, if we posit that colleagues are not malicious, otherwise all bets are off."}]}],"data":{"quirksMode":false}},"excerpt":"In a magical world where all tasks are well defined, performing task  or implement feature  is a simple matter of doing.\nIn this world only…","timeToRead":4,"frontmatter":{"title":"Osmosis Driven Development","userDate":"29 October 2018","date":"2018-10-29T14:59:41.000Z","modified":"2020-08-08T07:06:38.000Z","tags":["Opinion","Software Engineering"],"excerpt":"How context drives the engineering process","picture":null,"author":[{"yamlId":"Ken Cross","bio":"Software Engineer","avatar":{"children":[{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png","srcSet":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/7ffe238930a689e103d70f234bb00199/5fb52/ghost.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":400}}]}}]}},"relatedPosts":{"totalCount":2,"edges":[{"node":{"id":"d00b5604-98d2-540a-a927-462e0dc51281","timeToRead":4,"excerpt":"In a magical world where all tasks are well defined, performing task  or implement feature  is a simple matter of doing.\nIn this world only…","frontmatter":{"title":"Osmosis Driven Development","date":"2018-10-29T14:59:41.000Z","modified":"2020-08-08T07:06:38.000Z"},"fields":{"slug":"/posts/osmosis/"}}},{"node":{"id":"ca635f1b-6384-5143-8242-193da0965893","timeToRead":4,"excerpt":"I’ve had the luxury of programming with elixir for the last nine months.\nIt’s been my first full-time experience utilizing a functional…","frontmatter":{"title":"Elixir Impressions","date":"2018-07-07T07:36:24.000Z","modified":null},"fields":{"slug":"/posts/elixir_impressions/"}}}]}},"pageContext":{"slug":"/posts/osmosis/","prev":{"excerpt":"I’ve had the luxury of programming with elixir for the last nine months.\nIt’s been my first full-time experience utilizing a functional…","timeToRead":4,"frontmatter":{"title":"Elixir Impressions","tags":["Opinion","Software Engineering"],"date":"2018-07-07T07:36:24.000Z","draft":false,"excerpt":"TLDR: Elixir is awesome!!!","picture":null,"author":[{"yamlId":"Ken Cross","bio":"Software Engineer","avatar":{"children":[{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png","srcSet":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/7ffe238930a689e103d70f234bb00199/5fb52/ghost.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":400}}]}}]},"fields":{"layout":"post","slug":"/posts/elixir_impressions/"}},"next":{"excerpt":"Paving a path towards continuous delivery and zero-downtime deployments is a challenging pursuit especially when each project employs its…","timeToRead":4,"frontmatter":{"title":"Three Phase Commit Data Migrations","tags":["Technique","Software Engineering"],"date":"2018-12-09T19:35:54.000Z","draft":false,"excerpt":"A technique describing zero-downtime data migrations","picture":null,"author":[{"yamlId":"Ken Cross","bio":"Software Engineer","avatar":{"children":[{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png","srcSet":"/static/7ffe238930a689e103d70f234bb00199/17f8a/ghost.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/7ffe238930a689e103d70f234bb00199/5fb52/ghost.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":400}}]}}]},"fields":{"layout":"post","slug":"/posts/3pc/"}},"primaryTag":"Opinion"}},"staticQueryHashes":[],"slicesMap":{}}