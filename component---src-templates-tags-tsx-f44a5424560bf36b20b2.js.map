{"version":3,"file":"component---src-templates-tags-tsx-f44a5424560bf36b20b2.js","mappings":"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","sources":["webpack://blog/./src/templates/tags.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  pageContext: {\n    slug: string;\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          picture?: {\n            childImageSharp: {\n              gatsbyImageData: any;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Tags: React.FC<TagTemplateProps> = props => {\n  const tag = props.pageContext.tag ? props.pageContext.tag : '';\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const tagData = props.data.allTagYaml.edges.find(\n    n => n.node.id.toLowerCase() === tag.toLowerCase(),\n  );\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta name=\"description\" content={tagData?.node ? tagData.node.description : ''} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pageContext.slug} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pageContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <ResponsiveHeaderBackground\n            css={[outer, SiteHeaderBackground]}\n            backgroundImage={tagData?.node?.picture?.childImageSharp?.gatsbyImageData?.src}\n            className=\"site-header-background\"\n          >\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">{tag}</SiteTitle>\n              <SiteDescription className=\"site-description\">\n                {tagData?.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && '1 post'}\n                    {totalCount === 0 && 'No posts'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`query ($tag: String) {\n  allTagYaml {\n    edges {\n      node {\n        id\n        description\n        picture {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n  allMarkdownRemark(\n    limit: 2000\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {tags: {in: [$tag]}, draft: {ne: true}}}\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        timeToRead\n        frontmatter {\n          title\n          excerpt\n          tags\n          date\n          picture {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        fields {\n          layout\n          slug\n        }\n      }\n    }\n  }\n}`;\n"],"names":["props","_tagData$node","_tagData$node$picture","_tagData$node$picture2","_tagData$node$picture3","tag","pageContext","edges","totalCount","data","allMarkdownRemark","tagData","allTagYaml","find","n","node","id","toLowerCase","___EmotionJSX","IndexLayout","Helmet","lang","config","title","name","content","description","property","siteUrl","slug","twitter","split","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","SiteHeaderBackground","backgroundImage","picture","childImageSharp","gatsbyImageData","src","SiteHeaderContent","SiteTitle","SiteDescription","React","SiteMain","PostFeed","map","PostCard","key","fields","post","Footer"],"sourceRoot":""}