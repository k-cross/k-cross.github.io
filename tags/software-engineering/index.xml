<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering on kurosu</title>
    <link>https://k-cross.github.io/tags/software-engineering/</link>
    <description>Recent content in Software Engineering on kurosu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Dec 2018 12:35:54 -0700</lastBuildDate>
    
	<atom:link href="https://k-cross.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Three Phase Commit</title>
      <link>https://k-cross.github.io/posts/3pc/</link>
      <pubDate>Sun, 09 Dec 2018 12:35:54 -0700</pubDate>
      
      <guid>https://k-cross.github.io/posts/3pc/</guid>
      <description>Paving a path towards continuous delivery and zero downtime deployments is a challenging pursuit. It seems that each organization has a different strategy to employ and different techniques to use. One of the more generic solutions that is at the heart of this article was inspired by the three-phase-commit. Its origin stems from computer networking. It&amp;rsquo;s a way to perform the non-blocking version of the two-phase commit protocol, described as:</description>
    </item>
    
    <item>
      <title>Osmosis Driven Development</title>
      <link>https://k-cross.github.io/posts/osmosis/</link>
      <pubDate>Mon, 29 Oct 2018 07:59:41 -0700</pubDate>
      
      <guid>https://k-cross.github.io/posts/osmosis/</guid>
      <description>Once upon a time in a magical world where all tasks are well defined, performing task Y or implementing feature X is a simple matter of doing; In this world, only the current state of the feature needs to be communicated. A product manager could tell the sales team what engineering was capable of performing based on raw metrics and create hard deadlines, meaningful to customers. Time is used as a means to measure progress and productivity, two clear indicators that show how hard people are working.</description>
    </item>
    
    <item>
      <title>Abstractions</title>
      <link>https://k-cross.github.io/posts/abstractions/</link>
      <pubDate>Wed, 04 Jul 2018 00:06:38 -0700</pubDate>
      
      <guid>https://k-cross.github.io/posts/abstractions/</guid>
      <description>Foreword: the idea comes from Greg Young.
Correct abstractions in programming are hard to make for the future case. Often, not enough data is given at the start of a project and it&amp;rsquo;ll change in such a way that is no longer flexible with the current implementation strategy. So how then, should sustainable programs be built? Optimizing for code deletion is a large part of the answer, perhaps not a full one though.</description>
    </item>
    
  </channel>
</rss>