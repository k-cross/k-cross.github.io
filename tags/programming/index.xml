<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on kurosu</title>
    <link>https://k-cross.github.io/tags/programming/</link>
    <description>Recent content in Programming on kurosu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jul 2018 17:16:31 -0700</lastBuildDate>
    
	<atom:link href="https://k-cross.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Everything You Ever Wanted to Know About Crashing</title>
      <link>https://k-cross.github.io/posts/let_it_crash/</link>
      <pubDate>Tue, 10 Jul 2018 17:16:31 -0700</pubDate>
      
      <guid>https://k-cross.github.io/posts/let_it_crash/</guid>
      <description>Being able to just crash an ill running process is awesome. No need to handle it, no need to kill -9 a pesky service because of a buggy system call handler. Just a nice old fashioned death. This comes from erlang&amp;rsquo;s let it crash philosophy. But this is about the times when dying is less than desirable.
Why should a process be able to crash and when should it? They should crash when they&amp;rsquo;re not expected to handle failure.</description>
    </item>
    
    <item>
      <title>Abstractions</title>
      <link>https://k-cross.github.io/posts/abstractions/</link>
      <pubDate>Wed, 04 Jul 2018 00:06:38 -0700</pubDate>
      
      <guid>https://k-cross.github.io/posts/abstractions/</guid>
      <description>Foreword: the idea comes from Greg Young.
Correct abstractions in programming are hard to make for the future case. Often, not enough data is given at the start of a project and it&amp;rsquo;ll change in such a way that is no longer flexible with the current implementation strategy. So how then, should sustainable programs be built? Optimizing for code deletion is a large part of the answer, perhaps not a full one though.</description>
    </item>
    
  </channel>
</rss>