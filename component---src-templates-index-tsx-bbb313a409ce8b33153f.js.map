{"version":3,"file":"component---src-templates-index-tsx-bbb313a409ce8b33153f.js","mappings":"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","sources":["webpack://blog/./src/templates/index.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { getSrc } from 'gatsby-plugin-image';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    header: {\n      childImageSharp: {\n        gatsbyImageData: any;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.gatsbyImageData;\n  const imgPath = getSrc(props.data.header);\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta property=\"og:image\" content={imgPath} />\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta name=\"twitter:image\" content={imgPath} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${imgPath}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteNav isHome />\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">{config.title}</SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map((post, index) => {\n                // filter out drafts in production\n                return (\n                  (post.node.frontmatter.draft !== true ||\n                    process.env.NODE_ENV !== 'production') && (\n                    <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n                  )\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`query blogPageQuery($skip: Int!, $limit: Int!) {\n  header: file(relativePath: {eq: \"img/moma/diffuse.jpg\"}) {\n    childImageSharp {\n      gatsbyImageData(width: 2000, quality: 100, layout: FIXED)\n    }\n  }\n  allMarkdownRemark(\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {draft: {ne: true}, layout: {eq: \"post\"}}}\n    limit: $limit\n    skip: $skip\n  ) {\n    edges {\n      node {\n        timeToRead\n        frontmatter {\n          title\n          date\n          tags\n          draft\n          excerpt\n          picture {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n          author {\n            id\n            bio\n            avatar {\n              children {\n                ... on ImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n        }\n        excerpt\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      padding-bottom: 40px;\n      min-height: 280px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["HomePosts","name","styles","props","width","height","data","header","childImageSharp","gatsbyImageData","imgPath","getSrc","___EmotionJSX","IndexLayout","css","Helmet","lang","config","title","content","description","property","siteUrl","googleSiteVerification","twitter","split","toString","Wrapper","outer","SiteHeader","SiteHeaderStyles","className","style","backgroundImage","inner","SiteNav","isHome","SiteHeaderContent","SiteTitle","SiteDescription","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","PostCard","key","fields","slug","large","children","Footer"],"sourceRoot":""}