{"version":3,"file":"component---src-pages-index-tsx-b0f6e7581b39a0b1e328.js","mappings":"oPA2IA,UA/G+CA,IAC7C,MAAM,MAAEC,EAAK,OAAEC,GAAWF,EAAMG,KAAKC,OAAOC,gBAAgBC,gBACtDC,GAAUC,EAAAA,EAAAA,GAAOR,EAAMG,KAAKC,QAElC,OACEK,EAAAA,EAAAA,GAACC,EAAAA,EAAW,MACVD,EAAAA,EAAAA,GAACE,EAAAA,EAAM,MACLF,EAAAA,EAAAA,GAAA,QAAMG,KAAMC,EAAAA,EAAOD,QACnBH,EAAAA,EAAAA,GAAA,aAAQI,EAAAA,EAAOC,QACfL,EAAAA,EAAAA,GAAA,QAAMM,KAAK,cAAcC,QAASH,EAAAA,EAAOI,eACzCR,EAAAA,EAAAA,GAAA,QAAMS,SAAS,eAAeF,QAASH,EAAAA,EAAOC,SAC9CL,EAAAA,EAAAA,GAAA,QAAMS,SAAS,UAAUF,QAAQ,aACjCP,EAAAA,EAAAA,GAAA,QAAMS,SAAS,WAAWF,QAASH,EAAAA,EAAOC,SAC1CL,EAAAA,EAAAA,GAAA,QAAMS,SAAS,iBAAiBF,QAASH,EAAAA,EAAOI,eAChDR,EAAAA,EAAAA,GAAA,QAAMS,SAAS,SAASF,QAASH,EAAAA,EAAOM,WACxCV,EAAAA,EAAAA,GAAA,QAAMS,SAAS,WAAWF,QAAST,IAClCM,EAAAA,EAAOO,yBACNX,EAAAA,EAAAA,GAAA,QAAMM,KAAK,2BAA2BC,QAASH,EAAAA,EAAOO,0BAExDX,EAAAA,EAAAA,GAAA,QAAMM,KAAK,eAAeC,QAAQ,yBAClCP,EAAAA,EAAAA,GAAA,QAAMM,KAAK,gBAAgBC,QAASH,EAAAA,EAAOC,SAC3CL,EAAAA,EAAAA,GAAA,QAAMM,KAAK,sBAAsBC,QAASH,EAAAA,EAAOI,eACjDR,EAAAA,EAAAA,GAAA,QAAMM,KAAK,cAAcC,QAASH,EAAAA,EAAOM,WACzCV,EAAAA,EAAAA,GAAA,QAAMM,KAAK,gBAAgBC,QAAST,IACnCM,EAAAA,EAAOQ,UACNZ,EAAAA,EAAAA,GAAA,QACEM,KAAK,eACLC,QAAS,IAAIH,EAAAA,EAAOQ,QAAQC,MAAM,wBAAwB,QAG9Db,EAAAA,EAAAA,GAAA,QAAMS,SAAS,iBAAiBF,QAASf,EAAMsB,cAC/Cd,EAAAA,EAAAA,GAAA,QAAMS,SAAS,kBAAkBF,QAASd,EAAOqB,eAEnDd,EAAAA,EAAAA,GAACe,EAAAA,EAAO,MACNf,EAAAA,EAAAA,GAAA,OACEgB,IAAG,CAAGC,EAAAA,GAAOC,EAAAA,GAAYC,EAAAA,GAAgB,OACzCC,UAAU,yBACVC,MAAO,CACLC,gBAAiB,QAAQxB,SAG3BE,EAAAA,EAAAA,GAAA,OAAKgB,IAAKO,EAAAA,KACRvB,EAAAA,EAAAA,GAACwB,EAAAA,EAAO,CAACC,QAAM,KACfzB,EAAAA,EAAAA,GAAC0B,EAAAA,GAAiB,CAACN,UAAU,uBAC3BpB,EAAAA,EAAAA,GAAC2B,EAAAA,GAAS,CAACP,UAAU,cAAchB,EAAAA,EAAOC,QAC1CL,EAAAA,EAAAA,GAAC4B,EAAAA,GAAe,KAAExB,EAAAA,EAAOI,iBAI/BR,EAAAA,EAAAA,GAAA,QAAM6B,GAAG,YAAYb,IAAG,CAAGc,EAAAA,GAAUb,EAAAA,GAAK,SACxCjB,EAAAA,EAAAA,GAAA,OAAKgB,IAAG,CAAGO,EAAAA,GAAOQ,EAAAA,GAAK,SACrB/B,EAAAA,EAAAA,GAAA,OAAKgB,IAAG,CAAGgB,EAAAA,GAAQ,QAChBzC,EAAMG,KAAKuC,kBAAkBC,MAAMC,KAAI,CAACC,EAAMC,KAE3CrC,EAAAA,EAAAA,GAAA,WAASsC,IAAKF,EAAKG,KAAKC,OAAOC,KAAMzB,IAAG,CAAG0B,EAAAA,SAAQ,SACjD1C,EAAAA,EAAAA,GAAC2C,EAAAA,eAAc,CAACvB,UAAU,qBACxBpB,EAAAA,EAAAA,GAAC4C,EAAAA,aAAY,CAACxB,UAAU,kBACrBgB,EAAKG,KAAKM,YAAYC,MAAQV,EAAKG,KAAKM,YAAYC,KAAKC,OAAS,IACjE/C,EAAAA,EAAAA,GAACgD,EAAAA,GAAI,CAACC,GAAI,SAASC,IAAYd,EAAKG,KAAKM,YAAYC,KAAK,QACvDV,EAAKG,KAAKM,YAAYC,KAAK,MAIlC9C,EAAAA,EAAAA,GAACmD,EAAAA,cAAa,CAAC/B,UAAU,mBACtBgB,EAAKG,KAAKM,YAAYxC,SAG3BL,EAAAA,EAAAA,GAACoD,EAAAA,EAAW,CAACC,QAASjB,EAAKG,KAAKc,iBAO5CrD,EAAAA,EAAAA,GAACsD,EAAAA,EAAM,OAEG,C","sources":["webpack://blog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { getSrc } from 'gatsby-plugin-image';\nimport * as _ from 'lodash';\n\nimport SiteNav from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { Wrapper } from '../components/Wrapper';\nimport { Footer } from '../components/Footer';\nimport IndexLayout from '../layouts';\nimport { PostFull, PostFullHeader, PostFullTags, PostFullTitle } from '../templates/post';\nimport {\n  inner,\n  outer,\n  Posts,\n  PostFeed,\n  SiteMain,\n  SiteTitle,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\n\nimport 'katex/dist/katex.min.css';\n\nconst MainPage: React.FC<IndexTemplateProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.gatsbyImageData;\n  const imgPath = getSrc(props.data.header);\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta property=\"og:image\" content={imgPath} />\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta name=\"twitter:image\" content={imgPath} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${imgPath}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteNav isHome />\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">{config.title}</SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map((post, index) => {\n                return (\n                  <article key={post.node.fields.slug} css={[PostFull]}>\n                    <PostFullHeader className=\"post-full-header\">\n                      <PostFullTags className=\"post-full-tags\">\n                        {post.node.frontmatter.tags && post.node.frontmatter.tags.length > 0 && (\n                          <Link to={`/tags/${_.kebabCase(post.node.frontmatter.tags[0])}/`}>\n                            {post.node.frontmatter.tags[0]}\n                          </Link>\n                        )}\n                      </PostFullTags>\n                      <PostFullTitle className=\"post-full-title\">\n                        {post.node.frontmatter.title}\n                      </PostFullTitle>\n                    </PostFullHeader>\n                    <PostContent htmlAst={post.node.htmlAst} />\n                  </article>\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`{\n  header: file(relativePath: {eq: \"img/moma/diffuse.jpg\"}) {\n    childImageSharp {\n      gatsbyImageData(width: 2000, quality: 100, layout: FIXED)\n    }\n  }\n  allMarkdownRemark(\n    limit: 1\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {draft: {ne: true}, layout: {eq: \"post\"}}}\n  ) {\n    edges {\n      node {\n        timeToRead\n        frontmatter {\n          title\n          date\n          tags\n        }\n        excerpt\n        html\n        htmlAst\n        fields {\n          layout\n          slug\n        }\n      }\n    }\n  }\n}`;\n\nexport default MainPage;\n"],"names":["props","width","height","data","header","childImageSharp","gatsbyImageData","imgPath","getSrc","___EmotionJSX","IndexLayout","Helmet","lang","config","title","name","content","description","property","siteUrl","googleSiteVerification","twitter","split","toString","Wrapper","css","outer","SiteHeader","SiteHeaderStyles","className","style","backgroundImage","inner","SiteNav","isHome","SiteHeaderContent","SiteTitle","SiteDescription","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","key","node","fields","slug","PostFull","PostFullHeader","PostFullTags","frontmatter","tags","length","Link","to","_kebabCase","PostFullTitle","PostContent","htmlAst","Footer"],"sourceRoot":""}